CR EQU 0DH
LF EQU 0AH
NG EQU 2DH

PRINT PROC          
     	
    XOR CX, CX
    XOR DX, DX
		;fast init
    	;print value is in ax 
    	
	CMP AX, 0
	JE PRINT_ZERO
	JNL PUSH_NUMBER_LOOP
	
	PUSH AX
	MOV AH, 02H
	MOV DL, '-'
	INT 21H
	POP AX
	NEG AX
		;print '-' if negative value
	XOR DX,DX
		;fix dx value to 0
	
    	PUSH_NUMBER_LOOP:

        	CMP AX, 0
        	JE PRINT_LOOP  
         
        	MOV BX, 10
			;divide by 10  
         
        	DIV BX
        	PUSH DX
		INC CX
			;mod in stack            
                     
        	XOR DX, DX
        	JMP PUSH_NUMBER_LOOP

    	PRINT_LOOP:
        	POP DX
			MOV AH, 02H
        	ADD DX, 30H
        	INT 21H
        	 
        	LOOP PRINT_LOOP
	END_PRINT_LOOP:

		MOV AH, 02H
		MOV DL, CR
		INT 21H
		MOV DL, LF
		INT 21H

	RET
	
	PRINT_ZERO:
	
		MOV AH, 02H
		MOV DL, '0'
		INT 21H
		MOV DL, CR
		INT 21H
		MOV DL, LF
		INT 21H
	
	RET
		
PRINT ENDP 
